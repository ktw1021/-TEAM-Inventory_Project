<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="
                http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/security
                http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- HTTP Security 설정 -->
    <http auto-config="true">
        <intercept-url pattern="/main" access="permitAll"/>
        <intercept-url pattern="/user/**" access="permitAll"/>
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/branch/**" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/css/**" access="permitAll"/> <!-- CSS 파일에 대한 접근 허용 -->
        <intercept-url pattern="/js/**" access="permitAll"/> <!-- JavaScript 파일에 대한 접근 허용 -->
        <intercept-url pattern="/javascript/**" access="permitAll"/> <!-- JavaScript 파일에 대한 접근 허용 -->
        <intercept-url pattern="/images/**" access="permitAll"/> <!-- 이미지 파일에 대한 접근 허용 -->
        <intercept-url pattern="/logout" access="permitAll"/> <!-- 로그아웃 URL에 대한 접근 허용 -->
        <intercept-url pattern="/**" access="hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')"/>
        
        <form-login login-page="/user/login" 
        			login-processing-url="/user/login"
        			authentication-success-handler-ref="customAuthenticationSuccessHandler"/>
        <logout logout-url="/logout" logout-success-url="/main"/>
        <csrf disabled="true"/>
    </http>

	<!-- mvcHandlerMappingIntrospector 빈 정의 -->
	<beans:bean id="mvcHandlerMappingIntrospector" class="org.springframework.web.servlet.handler.HandlerMappingIntrospector"/>

	<!-- 커스텀 AuthenticationSuccessHandler 빈 정의 -->
	<beans:bean id="customAuthenticationSuccessHandler" class="com.inventory.security.CustomAuthenticationSuccessHandler"/>

	<!--  커스텀 CumtomUserDetailsService 빈 정의 -->
	<beans:bean id="customUserDetailsService" class="com.inventory.security.CustomUserDetailsService"/>


    <!-- 인증 관리자 설정 -->
    <authentication-manager>
        <authentication-provider user-service-ref="customUserDetailsService">
            <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
    </authentication-manager>
    
    <beans:bean id = "passwordEncoder" class = "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    
</beans:beans>
